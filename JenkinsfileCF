pipeline {
 agent any
 parameters {
 string(name: 'CF_USER', defaultValue: '<your userid>')
 string(name: 'CF_PWD', defaultValue: '<your password>')
 string(name: 'CF_ORG', defaultValue: '<your org>')
 string(name: 'CF_SPACE', defaultValue: 'dev')
 string(name: 'CF_APP_NAME', defaultValue: '<your app name>')
 }
 stages {
 stage('Continuous Integration') {
 steps {
 sh '''
 # build dt-ejb project
 cd dt-ejb
 mvn clean install
 # build Rest project
 cd ../Rest
 mvn clean install
 # build web project
 cd ../web
 mvn clean install
 # build EAR, create Liberty server, run tests
 cd ../daytrader-ee6
 mvn clean install 
 mvn verify -Pci-liberty 
 cd ..
 '''
 }
 }
 stage('Continuous Delivery') {
 steps {
 sh '''
 #!/bin/bash
 cd daytrader-ee6/target
 echo "CF Login..."
 # cf api <a href="https://api.ng.bluemix.net">https://api.ng.bluemix.net</a>
 export http_proxy=http://netutils.gsic-sus.net:8888
 export https_proxy=http://netutils.gsic-sus.net:8888
 cf login -u $CF_USER -p $CF_PWD -o "GSIC SUS" -s EVALUATE --skip-ssl-validation -a api.system.pcf.gsic-sus.net
 echo "Deploying...."
 if cf app $CF_APP_NAME; then
    echo "Application already exists, pushing new version..."
    # cf push $CF_APP_NAME -n $CF_APP_NAME -f ../src/main/resources/config/manifest.yml -p wlp/usr/servers/Daytrader3Sample
    # cf set-env $CF_APP_NAME JBP_CONFIG_LIBERTY 'app_archive: {features: [jsf-2.0, wasjmsserver-1.0, jaxrs-1.1, ejblite-3.1, jmsmdb-3.1, wasjmsclient-1.1]}'
    # cf restage $CF_APP_NAME
    cf push $CF_APP_NAME -f ../src/main/resources/config/manifest.yml -p wlp/usr/servers/Daytrader3Sample -b liberty-buildpack
 else
    echo "New Application, push and restage required..."
    # cf push $CF_APP_NAME -n $CF_APP_NAME -f ../src/main/resources/config/manifest.yml -p wlp/usr/servers/Daytrader3Sample
    cf push $CF_APP_NAME -f ../src/main/resources/config/manifest.yml -p wlp/usr/servers/Daytrader3Sample -b liberty-buildpack
    cf restage $CF_APP_NAME
 fi
 '''
 }
 }
 }
}
