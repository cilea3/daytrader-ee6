pipeline {
 agent any
 parameters {
 string(name: 'CF_USER', defaultValue: '<your userid>')
 string(name: 'CF_PWD', defaultValue: '<your password>')
 string(name: 'CF_ORG', defaultValue: '<your org>')
 string(name: 'CF_SPACE', defaultValue: 'dev')
 string(name: 'CF_APP_NAME', defaultValue: '<your app name>')
 }
 stages {
 stage('Continuous Integration') {
 steps {
 sh '''
 # build dt-ejb project
 cd dt-ejb
 mvn clean install
 # build Rest project
 cd ../Rest
 mvn clean install
 # build web project
 cd ../web
 mvn clean install
 # build EAR, create Liberty server, run tests
 cd ../daytrader-ee6
 mvn clean install 
 mvn verify -Pci-liberty 
 cd ..
 '''
 }
 }
 stage('Continuous Delivery') {
 steps {
 sh '''
 #!/bin/bash
 cd daytrader-ee6/target
 echo "CF Login..."
 export http_proxy=http://netutils.gsic-sus.net:8888
 export https_proxy=http://netutils.gsic-sus.net:8888
 cf login -u $CF_USER -p $CF_PWD -o "GSIC SUS" -s EVALUATE --skip-ssl-validation -a api.system.pcf.gsic-sus.net
 cf set-env $CF_APP_NAME JVM 'ibmjdk'
 cf set-env $CF_APP_NAME IBM_JVM_LICENSE 'L-PMAA-A3Z8P2'
 cf set-env $CF_APP_NAME IBM_LIBERTY_LICENSE 'L-SWIS-ASNMK6'
 echo "Deploying...."
 if cf app $CF_APP_NAME; then
    echo "Application already exists, pushing new version..."
    # cf push $CF_APP_NAME -f ../src/main/resources/config/manifest.yml -p wlp/usr/servers/Daytrader3Sample -b liberty-buildpack
    cf push $CF_APP_NAME -f ../src/main/resources/config/manifest.yml -p wlp/usr/servers/Daytrader3Sample -b https://github.com/cloudfoundry/ibm-websphere-liberty-buildpack.git
 else
    echo "New Application, push and restage required..."
    # cf push $CF_APP_NAME -n $CF_APP_NAME -f ../src/main/resources/config/manifest.yml -p wlp/usr/servers/Daytrader3Sample -b https://github.com/cloudfoundry/ibm-websphere-liberty-buildpack.git
    cf push $CF_APP_NAME -f ../src/main/resources/config/manifest.yml -p wlp/usr/servers/Daytrader3Sample -b https://github.com/cloudfoundry/ibm-websphere-liberty-buildpack.git
    cf restage $CF_APP_NAME
 fi
 '''
 }
 }
 }
}

